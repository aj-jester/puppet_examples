#
# ccm_profile::logrotate_rule
#
define ccm_profile::logrotate_rule (
  Pattern[/^[a-zA-Z0-9\._-]+$/] $rulename           = $title,
  Enum['present','absent'] $ensure                  = 'present',
  Optional[Logrotate::Path] $path                   = undef,
  Optional[Boolean] $compress                       = true,
  Optional[String] $compresscmd                     = undef,
  Optional[String] $compressext                     = undef,
  Optional[String] $compressoptions                 = undef,
  Optional[Boolean] $copy                           = undef,
  Optional[Boolean] $copytruncate                   = undef,
  Optional[Boolean] $create                         = undef,
  Optional[String] $create_mode                     = undef,
  Optional[String] $create_owner                    = undef,
  Optional[String] $create_group                    = undef,
  Optional[Boolean] $dateext                        = true,
  Optional[String] $dateformat                      = '-%Y-%m-%d-%s',
  Optional[Boolean] $dateyesterday                  = undef,
  Optional[Boolean] $delaycompress                  = undef,
  Optional[String] $extension                       = undef,
  Optional[Boolean] $ifempty                        = undef,
  Optional[Variant[String,Boolean]] $mail           = undef,
  Optional[Enum['mailfirst','maillast']] $mail_when = undef,
  Optional[Integer] $maxage                         = undef,
  Optional[Logrotate::Size] $minsize                = undef,
  Optional[Logrotate::Size] $maxsize                = undef,
  Optional[Boolean] $missingok                      = undef,
  Optional[Variant[Boolean,String]] $olddir         = undef,
  Optional[Logrotate::Commands] $postrotate         = undef,
  Optional[Logrotate::Commands] $prerotate          = undef,
  Optional[Logrotate::Commands] $firstaction        = undef,
  Optional[Logrotate::Commands] $lastaction         = undef,
  Optional[Integer] $rotate                         = 7,
  Optional[Logrotate::Every] $rotate_every          = 'day',
  Optional[Logrotate::Size] $size                   = undef,
  Optional[Boolean] $sharedscripts                  = undef,
  Optional[Boolean] $shred                          = undef,
  Optional[Integer] $shredcycles                    = undef,
  Optional[Integer] $start                          = undef,
  Optional[String] $su_owner                        = undef,
  Optional[String] $su_group                        = undef,
  Optional[String] $uncompresscmd                   = undef,
) {

  include ::logrotate

  logrotate::rule { $title:

    rulename        => $rulename,
    ensure          => $ensure,
    path            => $path,
    compress        => $compress,
    compresscmd     => $compresscmd,
    compressext     => $compressext,
    compressoptions => $compressoptions,
    copy            => $copy,
    copytruncate    => $copytruncate,
    create          => $create,
    create_mode     => $create_mode,
    create_owner    => $create_owner,
    create_group    => $create_group,
    dateext         => $dateext,
    dateformat      => $dateformat,
    dateyesterday   => $dateyesterday,
    delaycompress   => $delaycompress,
    extension       => $extension,
    ifempty         => $ifempty,
    mail            => $mail,
    mail_when       => $mail_when,
    maxage          => $maxage,
    minsize         => $minsize,
    maxsize         => $maxsize,
    missingok       => $missingok,
    olddir          => $olddir,
    postrotate      => $postrotate,
    prerotate       => $prerotate,
    firstaction     => $firstaction,
    lastaction      => $lastaction,
    rotate          => $rotate,
    rotate_every    => $rotate_every,
    size            => $size,
    sharedscripts   => $sharedscripts,
    shred           => $shred,
    shredcycles     => $shredcycles,
    start           => $start,
    su_owner        => $su_owner,
    su_group        => $su_group,
    uncompresscmd   => $uncompresscmd,

  }

}
